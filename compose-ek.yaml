version: "3"

services:
  zookeeper:
    container_name: twitterstreamingpipeline_ek_zookeeper
    image: wurstmeister/zookeeper
    restart: on-failure
    ports:
      - "2181:2181"
  kafka:
    container_name: twitterstreamingpipeline_ek_kafka
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    restart: on-failure
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9093,OUTSIDE://localhost:9092
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_CREATE_TOPICS=tweets:1:1,tweets_with_sentiment:1:1
    volumes:
      - ./persistence/kafka/docker.sock:/var/run/docker.sock
  tweets_producer:
    container_name: twitterstreamingpipeline_ek_tweets_producer
    build: ./tweets_producer
    depends_on:
      - kafka
    restart: on-failure
    environment:
      - TWITTER_API_KEY=
      - TWITTER_API_KEY_SECRET=
      - TWITTER_ACCESS_TOKEN=
      - TWITTER_ACCESS_TOKEN_SECRET=
      - TWITTER_KEYWORD=
      - KAFKA_TWEETS_TOPIC=tweets
  sentiment_analyser:
    container_name: twitterstreamingpipeline_ek_sentiment_analyser
    build: ./sentiment_analyser
    depends_on:
      - kafka
    restart: on-failure
    environment:
      - KAFKA_TWEETS_TOPIC=tweets
      - KAFKA_TWEETS_WITH_SENTIMENT_TOPIC=tweets_with_sentiment
  elasticsearch_connector:
    container_name: twitterstreamingpipeline_ek_elasticsearch_connector
    build: ./elasticsearch_connector
    depends_on:
      - kafka
      - elasticsearch
    restart: on-failure
    environment:
      - KAFKA_TWEETS_WITH_SENTIMENT_TOPIC=tweets_with_sentiment
      - ELASTICSEARCH_INDEX=tweets_with_sentiment
  elasticsearch:
    container_name: twitterstreamingpipeline_ek_elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.1
    ports:
      - "9200:9200"
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    volumes:
      - ./persistence/elasticsearch/data:/usr/share/elasticsearch/data
  kibana:
    container_name: twitterstreamingpipeline_ek_kibana
    image: docker.elastic.co/kibana/kibana:8.3.1
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    volumes:
      - ./persistence/kibana/data:/usr/share/kibana/data